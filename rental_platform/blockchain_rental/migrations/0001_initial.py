# Generated by Django 4.2.10 on 2025-05-09 07:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('blockchain_address', models.CharField(blank=True, help_text='用户的区块链钱包地址', max_length=42, null=True)),
                ('identity_verification_hash', models.CharField(blank=True, help_text='链上存储的身份验证信息哈希', max_length=64, null=True)),
                ('is_identity_verified', models.BooleanField(default=False, help_text='用户是否已通过链上身份验证')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_date', models.DateField(help_text='入住日期')),
                ('check_out_date', models.DateField(help_text='退房日期')),
                ('total_price', models.DecimalField(decimal_places=2, help_text='总价格', max_digits=10)),
                ('status', models.CharField(choices=[('pending', '等待确认'), ('confirmed', '已确认'), ('completed', '已完成'), ('cancelled', '已取消'), ('disputed', '存在争议')], default='pending', help_text='预订状态', max_length=20)),
                ('blockchain_contract_id', models.CharField(blank=True, help_text='区块链上的智能合约ID', max_length=64, null=True)),
                ('contract_hash', models.CharField(blank=True, help_text='预订合约条款的哈希值', max_length=64, null=True)),
                ('contract_status', models.CharField(blank=True, help_text='链上合约状态', max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '预订',
                'verbose_name_plural': '预订',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='评分 (1-5)')),
                ('comment', models.TextField(help_text='评价内容')),
                ('review_hash', models.CharField(blank=True, help_text='评价内容的哈希值', max_length=64, null=True)),
                ('blockchain_verification', models.BooleanField(default=False, help_text='评价是否已在链上验证')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(help_text='关联的预订', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='blockchain_rental.booking')),
                ('receiver', models.ForeignKey(help_text='评价接收者', on_delete=django.db.models.deletion.CASCADE, related_name='received_reviews', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(help_text='评价者', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '评价',
                'verbose_name_plural': '评价',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='房源标题', max_length=100)),
                ('description', models.TextField(help_text='房源描述')),
                ('location', models.CharField(help_text='房源位置', max_length=255)),
                ('price_per_night', models.DecimalField(decimal_places=2, help_text='每晚价格', max_digits=10)),
                ('blockchain_property_id', models.CharField(blank=True, help_text='房源在区块链上的唯一标识', max_length=64, null=True)),
                ('verification_hash', models.CharField(blank=True, help_text='房源验证信息的哈希值', max_length=64, null=True)),
                ('is_verified', models.BooleanField(default=False, help_text='房源是否已验证')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(help_text='房源所有者', on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '房源',
                'verbose_name_plural': '房源',
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='property',
            field=models.ForeignKey(help_text='预订的房源', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='blockchain_rental.property'),
        ),
        migrations.AddField(
            model_name='booking',
            name='renter',
            field=models.ForeignKey(help_text='租客', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BlockchainTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('identity', '身份验证'), ('property', '房源验证'), ('booking', '预订合约'), ('review', '评价验证'), ('payment', '支付交易'), ('other', '其他')], help_text='交易类型', max_length=20)),
                ('transaction_hash', models.CharField(help_text='区块链交易哈希', max_length=66)),
                ('related_object_id', models.IntegerField(blank=True, help_text='关联对象ID', null=True)),
                ('related_object_type', models.CharField(blank=True, help_text='关联对象类型', max_length=20, null=True)),
                ('status', models.CharField(default='pending', help_text='交易状态', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('confirmed_at', models.DateTimeField(blank=True, help_text='交易确认时间', null=True)),
                ('user', models.ForeignKey(help_text='发起交易的用户', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '区块链交易',
                'verbose_name_plural': '区块链交易',
            },
        ),
    ]
